[{"name":"abstract class BaseBottomSheetFragment<VB : ViewBinding, VM : ViewModel> : BottomSheetDialogFragment","description":"com.example.coin.util.BaseBottomSheetFragment","location":"app/com.example.coin.util/-base-bottom-sheet-fragment/index.html","searchKeys":["BaseBottomSheetFragment","abstract class BaseBottomSheetFragment<VB : ViewBinding, VM : ViewModel> : BottomSheetDialogFragment","com.example.coin.util.BaseBottomSheetFragment"]},{"name":"abstract class BaseFragment<VB : ViewBinding, VM : ViewModel> : Fragment","description":"com.example.coin.util.BaseFragment","location":"app/com.example.coin.util/-base-fragment/index.html","searchKeys":["BaseFragment","abstract class BaseFragment<VB : ViewBinding, VM : ViewModel> : Fragment","com.example.coin.util.BaseFragment"]},{"name":"abstract class Database : RoomDatabase","description":"com.example.coin.data.Database","location":"app/com.example.coin.data/-database/index.html","searchKeys":["Database","abstract class Database : RoomDatabase","com.example.coin.data.Database"]},{"name":"abstract fun delete(record: Record): Completable","description":"com.example.coin.data.RecordDao.delete","location":"app/com.example.coin.data/-record-dao/delete.html","searchKeys":["delete","abstract fun delete(record: Record): Completable","com.example.coin.data.RecordDao.delete"]},{"name":"abstract fun deleteRecord(record: Record): Completable","description":"com.example.coin.domain.RecordRepository.deleteRecord","location":"app/com.example.coin.domain/-record-repository/delete-record.html","searchKeys":["deleteRecord","abstract fun deleteRecord(record: Record): Completable","com.example.coin.domain.RecordRepository.deleteRecord"]},{"name":"abstract fun getAll(): Flowable<List<Record>>","description":"com.example.coin.data.RecordDao.getAll","location":"app/com.example.coin.data/-record-dao/get-all.html","searchKeys":["getAll","abstract fun getAll(): Flowable<List<Record>>","com.example.coin.data.RecordDao.getAll"]},{"name":"abstract fun getAll(): Flowable<List<Record>>","description":"com.example.coin.domain.RecordRepository.getAll","location":"app/com.example.coin.domain/-record-repository/get-all.html","searchKeys":["getAll","abstract fun getAll(): Flowable<List<Record>>","com.example.coin.domain.RecordRepository.getAll"]},{"name":"abstract fun insert(vararg records: Record): Completable","description":"com.example.coin.data.RecordDao.insert","location":"app/com.example.coin.data/-record-dao/insert.html","searchKeys":["insert","abstract fun insert(vararg records: Record): Completable","com.example.coin.data.RecordDao.insert"]},{"name":"abstract fun insertNewRecord(record: Record): Completable","description":"com.example.coin.domain.RecordRepository.insertNewRecord","location":"app/com.example.coin.domain/-record-repository/insert-new-record.html","searchKeys":["insertNewRecord","abstract fun insertNewRecord(record: Record): Completable","com.example.coin.domain.RecordRepository.insertNewRecord"]},{"name":"abstract fun recordDatabase(): RecordDao","description":"com.example.coin.data.Database.recordDatabase","location":"app/com.example.coin.data/-database/record-database.html","searchKeys":["recordDatabase","abstract fun recordDatabase(): RecordDao","com.example.coin.data.Database.recordDatabase"]},{"name":"abstract fun searchByName(name: String): Flowable<List<Record>>","description":"com.example.coin.data.RecordDao.searchByName","location":"app/com.example.coin.data/-record-dao/search-by-name.html","searchKeys":["searchByName","abstract fun searchByName(name: String): Flowable<List<Record>>","com.example.coin.data.RecordDao.searchByName"]},{"name":"abstract fun searchByName(searchRequest: String): Flowable<List<Record>>","description":"com.example.coin.domain.RecordRepository.searchByName","location":"app/com.example.coin.domain/-record-repository/search-by-name.html","searchKeys":["searchByName","abstract fun searchByName(searchRequest: String): Flowable<List<Record>>","com.example.coin.domain.RecordRepository.searchByName"]},{"name":"abstract fun update(record: Record): Completable","description":"com.example.coin.data.RecordDao.update","location":"app/com.example.coin.data/-record-dao/update.html","searchKeys":["update","abstract fun update(record: Record): Completable","com.example.coin.data.RecordDao.update"]},{"name":"abstract fun updateRecord(record: Record): Completable","description":"com.example.coin.domain.RecordRepository.updateRecord","location":"app/com.example.coin.domain/-record-repository/update-record.html","searchKeys":["updateRecord","abstract fun updateRecord(record: Record): Completable","com.example.coin.domain.RecordRepository.updateRecord"]},{"name":"class DataModule","description":"com.example.coin.data.DataModule","location":"app/com.example.coin.data/-data-module/index.html","searchKeys":["DataModule","class DataModule","com.example.coin.data.DataModule"]},{"name":"class DeleteRecordUseCase constructor(recordRepository: RecordRepository)","description":"com.example.coin.domain.DeleteRecordUseCase","location":"app/com.example.coin.domain/-delete-record-use-case/index.html","searchKeys":["DeleteRecordUseCase","class DeleteRecordUseCase constructor(recordRepository: RecordRepository)","com.example.coin.domain.DeleteRecordUseCase"]},{"name":"class GetAllRecordsUseCase constructor(recordRepository: RecordRepository)","description":"com.example.coin.domain.GetAllRecordsUseCase","location":"app/com.example.coin.domain/-get-all-records-use-case/index.html","searchKeys":["GetAllRecordsUseCase","class GetAllRecordsUseCase constructor(recordRepository: RecordRepository)","com.example.coin.domain.GetAllRecordsUseCase"]},{"name":"class InsertRecordUseCase constructor(repository: RecordRepository)","description":"com.example.coin.domain.InsertRecordUseCase","location":"app/com.example.coin.domain/-insert-record-use-case/index.html","searchKeys":["InsertRecordUseCase","class InsertRecordUseCase constructor(repository: RecordRepository)","com.example.coin.domain.InsertRecordUseCase"]},{"name":"class MainActivity : AppCompatActivity","description":"com.example.coin.MainActivity","location":"app/com.example.coin/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : AppCompatActivity","com.example.coin.MainActivity"]},{"name":"class MainFragment : BaseFragment<<Error class: unknown class>, MainViewModel> , Toolbar.OnMenuItemClickListener","description":"com.example.coin.ui.main.MainFragment","location":"app/com.example.coin.ui.main/-main-fragment/index.html","searchKeys":["MainFragment","class MainFragment : BaseFragment<<Error class: unknown class>, MainViewModel> , Toolbar.OnMenuItemClickListener","com.example.coin.ui.main.MainFragment"]},{"name":"class MainViewModel constructor(deleteRecordUseCase: DeleteRecordUseCase, getAllRecordsUseCase: GetAllRecordsUseCase, searchRecordUseCase: SearchRecordUseCase, updateRecordUseCase: UpdateRecordUseCase, insertRecordUseCase: InsertRecordUseCase) : ViewModel","description":"com.example.coin.ui.main.MainViewModel","location":"app/com.example.coin.ui.main/-main-view-model/index.html","searchKeys":["MainViewModel","class MainViewModel constructor(deleteRecordUseCase: DeleteRecordUseCase, getAllRecordsUseCase: GetAllRecordsUseCase, searchRecordUseCase: SearchRecordUseCase, updateRecordUseCase: UpdateRecordUseCase, insertRecordUseCase: InsertRecordUseCase) : ViewModel","com.example.coin.ui.main.MainViewModel"]},{"name":"class MyApplication : MultiDexApplication","description":"com.example.coin.MyApplication","location":"app/com.example.coin/-my-application/index.html","searchKeys":["MyApplication","class MyApplication : MultiDexApplication","com.example.coin.MyApplication"]},{"name":"class NewRecordBottomSheetFragment : BaseBottomSheetFragment<<Error class: unknown class>, NewRecordViewModel> ","description":"com.example.coin.ui.main.NewRecordBottomSheetFragment","location":"app/com.example.coin.ui.main/-new-record-bottom-sheet-fragment/index.html","searchKeys":["NewRecordBottomSheetFragment","class NewRecordBottomSheetFragment : BaseBottomSheetFragment<<Error class: unknown class>, NewRecordViewModel> ","com.example.coin.ui.main.NewRecordBottomSheetFragment"]},{"name":"class NewRecordViewModel constructor(createUseCase: InsertRecordUseCase) : ViewModel","description":"com.example.coin.ui.main.NewRecordViewModel","location":"app/com.example.coin.ui.main/-new-record-view-model/index.html","searchKeys":["NewRecordViewModel","class NewRecordViewModel constructor(createUseCase: InsertRecordUseCase) : ViewModel","com.example.coin.ui.main.NewRecordViewModel"]},{"name":"class RecordItem(record: Record, onDeleteButtonPressed: (Record) -> Unit) : BindableItem<<Error class: unknown class>> ","description":"com.example.coin.ui.main.RecordItem","location":"app/com.example.coin.ui.main/-record-item/index.html","searchKeys":["RecordItem","class RecordItem(record: Record, onDeleteButtonPressed: (Record) -> Unit) : BindableItem<<Error class: unknown class>> ","com.example.coin.ui.main.RecordItem"]},{"name":"class RecordRepositoryImpl constructor(recordDao: RecordDao) : RecordRepository","description":"com.example.coin.data.RecordRepositoryImpl","location":"app/com.example.coin.data/-record-repository-impl/index.html","searchKeys":["RecordRepositoryImpl","class RecordRepositoryImpl constructor(recordDao: RecordDao) : RecordRepository","com.example.coin.data.RecordRepositoryImpl"]},{"name":"class SearchRecordUseCase constructor(repository: RecordRepository)","description":"com.example.coin.domain.SearchRecordUseCase","location":"app/com.example.coin.domain/-search-record-use-case/index.html","searchKeys":["SearchRecordUseCase","class SearchRecordUseCase constructor(repository: RecordRepository)","com.example.coin.domain.SearchRecordUseCase"]},{"name":"class UpdateRecordUseCase constructor(repository: RecordRepository)","description":"com.example.coin.domain.UpdateRecordUseCase","location":"app/com.example.coin.domain/-update-record-use-case/index.html","searchKeys":["UpdateRecordUseCase","class UpdateRecordUseCase constructor(repository: RecordRepository)","com.example.coin.domain.UpdateRecordUseCase"]},{"name":"data class MainViewModelState(val records: List<Record>, val isLoading: Boolean, val error: Throwable?)","description":"com.example.coin.ui.main.MainViewModelState","location":"app/com.example.coin.ui.main/-main-view-model-state/index.html","searchKeys":["MainViewModelState","data class MainViewModelState(val records: List<Record>, val isLoading: Boolean, val error: Throwable?)","com.example.coin.ui.main.MainViewModelState"]},{"name":"data class NewRecordState(val created: Boolean, val error: Throwable?)","description":"com.example.coin.ui.main.NewRecordState","location":"app/com.example.coin.ui.main/-new-record-state/index.html","searchKeys":["NewRecordState","data class NewRecordState(val created: Boolean, val error: Throwable?)","com.example.coin.ui.main.NewRecordState"]},{"name":"data class Record(val uid: Int, val date: OffsetDateTime, val name: String, val amount: Double)","description":"com.example.coin.data.Record","location":"app/com.example.coin.data/-record/index.html","searchKeys":["Record","data class Record(val uid: Int, val date: OffsetDateTime, val name: String, val amount: Double)","com.example.coin.data.Record"]},{"name":"fun BaseBottomSheetFragment()","description":"com.example.coin.util.BaseBottomSheetFragment.BaseBottomSheetFragment","location":"app/com.example.coin.util/-base-bottom-sheet-fragment/-base-bottom-sheet-fragment.html","searchKeys":["BaseBottomSheetFragment","fun BaseBottomSheetFragment()","com.example.coin.util.BaseBottomSheetFragment.BaseBottomSheetFragment"]},{"name":"fun BaseFragment()","description":"com.example.coin.util.BaseFragment.BaseFragment","location":"app/com.example.coin.util/-base-fragment/-base-fragment.html","searchKeys":["BaseFragment","fun BaseFragment()","com.example.coin.util.BaseFragment.BaseFragment"]},{"name":"fun DataModule()","description":"com.example.coin.data.DataModule.DataModule","location":"app/com.example.coin.data/-data-module/-data-module.html","searchKeys":["DataModule","fun DataModule()","com.example.coin.data.DataModule.DataModule"]},{"name":"fun Database()","description":"com.example.coin.data.Database.Database","location":"app/com.example.coin.data/-database/-database.html","searchKeys":["Database","fun Database()","com.example.coin.data.Database.Database"]},{"name":"fun DeleteRecordUseCase(recordRepository: RecordRepository)","description":"com.example.coin.domain.DeleteRecordUseCase.DeleteRecordUseCase","location":"app/com.example.coin.domain/-delete-record-use-case/-delete-record-use-case.html","searchKeys":["DeleteRecordUseCase","fun DeleteRecordUseCase(recordRepository: RecordRepository)","com.example.coin.domain.DeleteRecordUseCase.DeleteRecordUseCase"]},{"name":"fun GetAllRecordsUseCase(recordRepository: RecordRepository)","description":"com.example.coin.domain.GetAllRecordsUseCase.GetAllRecordsUseCase","location":"app/com.example.coin.domain/-get-all-records-use-case/-get-all-records-use-case.html","searchKeys":["GetAllRecordsUseCase","fun GetAllRecordsUseCase(recordRepository: RecordRepository)","com.example.coin.domain.GetAllRecordsUseCase.GetAllRecordsUseCase"]},{"name":"fun InsertRecordUseCase(repository: RecordRepository)","description":"com.example.coin.domain.InsertRecordUseCase.InsertRecordUseCase","location":"app/com.example.coin.domain/-insert-record-use-case/-insert-record-use-case.html","searchKeys":["InsertRecordUseCase","fun InsertRecordUseCase(repository: RecordRepository)","com.example.coin.domain.InsertRecordUseCase.InsertRecordUseCase"]},{"name":"fun MainActivity()","description":"com.example.coin.MainActivity.MainActivity","location":"app/com.example.coin/-main-activity/-main-activity.html","searchKeys":["MainActivity","fun MainActivity()","com.example.coin.MainActivity.MainActivity"]},{"name":"fun MainFragment()","description":"com.example.coin.ui.main.MainFragment.MainFragment","location":"app/com.example.coin.ui.main/-main-fragment/-main-fragment.html","searchKeys":["MainFragment","fun MainFragment()","com.example.coin.ui.main.MainFragment.MainFragment"]},{"name":"fun MainViewModel(deleteRecordUseCase: DeleteRecordUseCase, getAllRecordsUseCase: GetAllRecordsUseCase, searchRecordUseCase: SearchRecordUseCase, updateRecordUseCase: UpdateRecordUseCase, insertRecordUseCase: InsertRecordUseCase)","description":"com.example.coin.ui.main.MainViewModel.MainViewModel","location":"app/com.example.coin.ui.main/-main-view-model/-main-view-model.html","searchKeys":["MainViewModel","fun MainViewModel(deleteRecordUseCase: DeleteRecordUseCase, getAllRecordsUseCase: GetAllRecordsUseCase, searchRecordUseCase: SearchRecordUseCase, updateRecordUseCase: UpdateRecordUseCase, insertRecordUseCase: InsertRecordUseCase)","com.example.coin.ui.main.MainViewModel.MainViewModel"]},{"name":"fun MainViewModelState(records: List<Record>, isLoading: Boolean, error: Throwable?)","description":"com.example.coin.ui.main.MainViewModelState.MainViewModelState","location":"app/com.example.coin.ui.main/-main-view-model-state/-main-view-model-state.html","searchKeys":["MainViewModelState","fun MainViewModelState(records: List<Record>, isLoading: Boolean, error: Throwable?)","com.example.coin.ui.main.MainViewModelState.MainViewModelState"]},{"name":"fun MyApplication()","description":"com.example.coin.MyApplication.MyApplication","location":"app/com.example.coin/-my-application/-my-application.html","searchKeys":["MyApplication","fun MyApplication()","com.example.coin.MyApplication.MyApplication"]},{"name":"fun NewRecordBottomSheetFragment()","description":"com.example.coin.ui.main.NewRecordBottomSheetFragment.NewRecordBottomSheetFragment","location":"app/com.example.coin.ui.main/-new-record-bottom-sheet-fragment/-new-record-bottom-sheet-fragment.html","searchKeys":["NewRecordBottomSheetFragment","fun NewRecordBottomSheetFragment()","com.example.coin.ui.main.NewRecordBottomSheetFragment.NewRecordBottomSheetFragment"]},{"name":"fun NewRecordState(created: Boolean, error: Throwable?)","description":"com.example.coin.ui.main.NewRecordState.NewRecordState","location":"app/com.example.coin.ui.main/-new-record-state/-new-record-state.html","searchKeys":["NewRecordState","fun NewRecordState(created: Boolean, error: Throwable?)","com.example.coin.ui.main.NewRecordState.NewRecordState"]},{"name":"fun NewRecordViewModel(createUseCase: InsertRecordUseCase)","description":"com.example.coin.ui.main.NewRecordViewModel.NewRecordViewModel","location":"app/com.example.coin.ui.main/-new-record-view-model/-new-record-view-model.html","searchKeys":["NewRecordViewModel","fun NewRecordViewModel(createUseCase: InsertRecordUseCase)","com.example.coin.ui.main.NewRecordViewModel.NewRecordViewModel"]},{"name":"fun Record(uid: Int, date: OffsetDateTime, name: String, amount: Double)","description":"com.example.coin.data.Record.Record","location":"app/com.example.coin.data/-record/-record.html","searchKeys":["Record","fun Record(uid: Int, date: OffsetDateTime, name: String, amount: Double)","com.example.coin.data.Record.Record"]},{"name":"fun RecordItem(record: Record, onDeleteButtonPressed: (Record) -> Unit)","description":"com.example.coin.ui.main.RecordItem.RecordItem","location":"app/com.example.coin.ui.main/-record-item/-record-item.html","searchKeys":["RecordItem","fun RecordItem(record: Record, onDeleteButtonPressed: (Record) -> Unit)","com.example.coin.ui.main.RecordItem.RecordItem"]},{"name":"fun RecordRepositoryImpl(recordDao: RecordDao)","description":"com.example.coin.data.RecordRepositoryImpl.RecordRepositoryImpl","location":"app/com.example.coin.data/-record-repository-impl/-record-repository-impl.html","searchKeys":["RecordRepositoryImpl","fun RecordRepositoryImpl(recordDao: RecordDao)","com.example.coin.data.RecordRepositoryImpl.RecordRepositoryImpl"]},{"name":"fun SearchRecordUseCase(repository: RecordRepository)","description":"com.example.coin.domain.SearchRecordUseCase.SearchRecordUseCase","location":"app/com.example.coin.domain/-search-record-use-case/-search-record-use-case.html","searchKeys":["SearchRecordUseCase","fun SearchRecordUseCase(repository: RecordRepository)","com.example.coin.domain.SearchRecordUseCase.SearchRecordUseCase"]},{"name":"fun UpdateRecordUseCase(repository: RecordRepository)","description":"com.example.coin.domain.UpdateRecordUseCase.UpdateRecordUseCase","location":"app/com.example.coin.domain/-update-record-use-case/-update-record-use-case.html","searchKeys":["UpdateRecordUseCase","fun UpdateRecordUseCase(repository: RecordRepository)","com.example.coin.domain.UpdateRecordUseCase.UpdateRecordUseCase"]},{"name":"fun View.gone()","description":"com.example.coin.ui.main.gone","location":"app/com.example.coin.ui.main/gone.html","searchKeys":["gone","fun View.gone()","com.example.coin.ui.main.gone"]},{"name":"fun View.visible()","description":"com.example.coin.ui.main.visible","location":"app/com.example.coin.ui.main/visible.html","searchKeys":["visible","fun View.visible()","com.example.coin.ui.main.visible"]},{"name":"fun create(name: String, amount: String)","description":"com.example.coin.ui.main.NewRecordViewModel.create","location":"app/com.example.coin.ui.main/-new-record-view-model/create.html","searchKeys":["create","fun create(name: String, amount: String)","com.example.coin.ui.main.NewRecordViewModel.create"]},{"name":"fun delete(record: Record)","description":"com.example.coin.ui.main.MainViewModel.delete","location":"app/com.example.coin.ui.main/-main-view-model/delete.html","searchKeys":["delete","fun delete(record: Record)","com.example.coin.ui.main.MainViewModel.delete"]},{"name":"fun empty(): MainViewModelState","description":"com.example.coin.ui.main.MainViewModelState.Companion.empty","location":"app/com.example.coin.ui.main/-main-view-model-state/-companion/empty.html","searchKeys":["empty","fun empty(): MainViewModelState","com.example.coin.ui.main.MainViewModelState.Companion.empty"]},{"name":"fun error(e: Throwable): MainViewModelState","description":"com.example.coin.ui.main.MainViewModelState.Companion.error","location":"app/com.example.coin.ui.main/-main-view-model-state/-companion/error.html","searchKeys":["error","fun error(e: Throwable): MainViewModelState","com.example.coin.ui.main.MainViewModelState.Companion.error"]},{"name":"fun execute(): Flowable<List<Record>>","description":"com.example.coin.domain.GetAllRecordsUseCase.execute","location":"app/com.example.coin.domain/-get-all-records-use-case/execute.html","searchKeys":["execute","fun execute(): Flowable<List<Record>>","com.example.coin.domain.GetAllRecordsUseCase.execute"]},{"name":"fun execute(record: Record): Completable","description":"com.example.coin.domain.DeleteRecordUseCase.execute","location":"app/com.example.coin.domain/-delete-record-use-case/execute.html","searchKeys":["execute","fun execute(record: Record): Completable","com.example.coin.domain.DeleteRecordUseCase.execute"]},{"name":"fun execute(record: Record): Completable","description":"com.example.coin.domain.InsertRecordUseCase.execute","location":"app/com.example.coin.domain/-insert-record-use-case/execute.html","searchKeys":["execute","fun execute(record: Record): Completable","com.example.coin.domain.InsertRecordUseCase.execute"]},{"name":"fun execute(record: Record): Completable","description":"com.example.coin.domain.UpdateRecordUseCase.execute","location":"app/com.example.coin.domain/-update-record-use-case/execute.html","searchKeys":["execute","fun execute(record: Record): Completable","com.example.coin.domain.UpdateRecordUseCase.execute"]},{"name":"fun execute(searchRequest: String): Flowable<List<Record>>","description":"com.example.coin.domain.SearchRecordUseCase.execute","location":"app/com.example.coin.domain/-search-record-use-case/execute.html","searchKeys":["execute","fun execute(searchRequest: String): Flowable<List<Record>>","com.example.coin.domain.SearchRecordUseCase.execute"]},{"name":"fun fromOffsetDateTime(date: OffsetDateTime?): String?","description":"com.example.coin.data.TiviTypeConverters.fromOffsetDateTime","location":"app/com.example.coin.data/-tivi-type-converters/from-offset-date-time.html","searchKeys":["fromOffsetDateTime","fun fromOffsetDateTime(date: OffsetDateTime?): String?","com.example.coin.data.TiviTypeConverters.fromOffsetDateTime"]},{"name":"fun init()","description":"com.example.coin.ui.main.MainViewModel.init","location":"app/com.example.coin.ui.main/-main-view-model/init.html","searchKeys":["init","fun init()","com.example.coin.ui.main.MainViewModel.init"]},{"name":"fun newInstance(): MainFragment","description":"com.example.coin.ui.main.MainFragment.Companion.newInstance","location":"app/com.example.coin.ui.main/-main-fragment/-companion/new-instance.html","searchKeys":["newInstance","fun newInstance(): MainFragment","com.example.coin.ui.main.MainFragment.Companion.newInstance"]},{"name":"fun provideAppDatabase(appContext: Context): Database","description":"com.example.coin.data.DataModule.provideAppDatabase","location":"app/com.example.coin.data/-data-module/provide-app-database.html","searchKeys":["provideAppDatabase","fun provideAppDatabase(appContext: Context): Database","com.example.coin.data.DataModule.provideAppDatabase"]},{"name":"fun provideRecordDao(appDatabase: Database): RecordDao","description":"com.example.coin.data.DataModule.provideRecordDao","location":"app/com.example.coin.data/-data-module/provide-record-dao.html","searchKeys":["provideRecordDao","fun provideRecordDao(appDatabase: Database): RecordDao","com.example.coin.data.DataModule.provideRecordDao"]},{"name":"fun provideRepoImpl(recordRepositoryImpl: RecordRepositoryImpl): RecordRepository","description":"com.example.coin.data.DataModule.provideRepoImpl","location":"app/com.example.coin.data/-data-module/provide-repo-impl.html","searchKeys":["provideRepoImpl","fun provideRepoImpl(recordRepositoryImpl: RecordRepositoryImpl): RecordRepository","com.example.coin.data.DataModule.provideRepoImpl"]},{"name":"fun search(searchRequest: String)","description":"com.example.coin.ui.main.MainViewModel.search","location":"app/com.example.coin.ui.main/-main-view-model/search.html","searchKeys":["search","fun search(searchRequest: String)","com.example.coin.ui.main.MainViewModel.search"]},{"name":"fun toOffsetDateTime(value: String?): OffsetDateTime?","description":"com.example.coin.data.TiviTypeConverters.toOffsetDateTime","location":"app/com.example.coin.data/-tivi-type-converters/to-offset-date-time.html","searchKeys":["toOffsetDateTime","fun toOffsetDateTime(value: String?): OffsetDateTime?","com.example.coin.data.TiviTypeConverters.toOffsetDateTime"]},{"name":"fun update(amount: String, recordName: String)","description":"com.example.coin.ui.main.MainViewModel.update","location":"app/com.example.coin.ui.main/-main-view-model/update.html","searchKeys":["update","fun update(amount: String, recordName: String)","com.example.coin.ui.main.MainViewModel.update"]},{"name":"interface RecordDao","description":"com.example.coin.data.RecordDao","location":"app/com.example.coin.data/-record-dao/index.html","searchKeys":["RecordDao","interface RecordDao","com.example.coin.data.RecordDao"]},{"name":"interface RecordRepository","description":"com.example.coin.domain.RecordRepository","location":"app/com.example.coin.domain/-record-repository/index.html","searchKeys":["RecordRepository","interface RecordRepository","com.example.coin.domain.RecordRepository"]},{"name":"object Companion","description":"com.example.coin.ui.main.MainFragment.Companion","location":"app/com.example.coin.ui.main/-main-fragment/-companion/index.html","searchKeys":["Companion","object Companion","com.example.coin.ui.main.MainFragment.Companion"]},{"name":"object Companion","description":"com.example.coin.ui.main.MainViewModelState.Companion","location":"app/com.example.coin.ui.main/-main-view-model-state/-companion/index.html","searchKeys":["Companion","object Companion","com.example.coin.ui.main.MainViewModelState.Companion"]},{"name":"object TiviTypeConverters","description":"com.example.coin.data.TiviTypeConverters","location":"app/com.example.coin.data/-tivi-type-converters/index.html","searchKeys":["TiviTypeConverters","object TiviTypeConverters","com.example.coin.data.TiviTypeConverters"]},{"name":"open override fun bind(viewBinding: <Error class: unknown class>, position: Int)","description":"com.example.coin.ui.main.RecordItem.bind","location":"app/com.example.coin.ui.main/-record-item/bind.html","searchKeys":["bind","open override fun bind(viewBinding: <Error class: unknown class>, position: Int)","com.example.coin.ui.main.RecordItem.bind"]},{"name":"open override fun deleteRecord(record: Record): Completable","description":"com.example.coin.data.RecordRepositoryImpl.deleteRecord","location":"app/com.example.coin.data/-record-repository-impl/delete-record.html","searchKeys":["deleteRecord","open override fun deleteRecord(record: Record): Completable","com.example.coin.data.RecordRepositoryImpl.deleteRecord"]},{"name":"open override fun getAll(): Flowable<List<Record>>","description":"com.example.coin.data.RecordRepositoryImpl.getAll","location":"app/com.example.coin.data/-record-repository-impl/get-all.html","searchKeys":["getAll","open override fun getAll(): Flowable<List<Record>>","com.example.coin.data.RecordRepositoryImpl.getAll"]},{"name":"open override fun getLayout(): Int","description":"com.example.coin.ui.main.RecordItem.getLayout","location":"app/com.example.coin.ui.main/-record-item/get-layout.html","searchKeys":["getLayout","open override fun getLayout(): Int","com.example.coin.ui.main.RecordItem.getLayout"]},{"name":"open override fun insertNewRecord(record: Record): Completable","description":"com.example.coin.data.RecordRepositoryImpl.insertNewRecord","location":"app/com.example.coin.data/-record-repository-impl/insert-new-record.html","searchKeys":["insertNewRecord","open override fun insertNewRecord(record: Record): Completable","com.example.coin.data.RecordRepositoryImpl.insertNewRecord"]},{"name":"open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","description":"com.example.coin.util.BaseBottomSheetFragment.onCreateView","location":"app/com.example.coin.util/-base-bottom-sheet-fragment/on-create-view.html","searchKeys":["onCreateView","open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","com.example.coin.util.BaseBottomSheetFragment.onCreateView"]},{"name":"open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","description":"com.example.coin.util.BaseFragment.onCreateView","location":"app/com.example.coin.util/-base-fragment/on-create-view.html","searchKeys":["onCreateView","open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","com.example.coin.util.BaseFragment.onCreateView"]},{"name":"open override fun onMenuItemClick(item: MenuItem?): Boolean","description":"com.example.coin.ui.main.MainFragment.onMenuItemClick","location":"app/com.example.coin.ui.main/-main-fragment/on-menu-item-click.html","searchKeys":["onMenuItemClick","open override fun onMenuItemClick(item: MenuItem?): Boolean","com.example.coin.ui.main.MainFragment.onMenuItemClick"]},{"name":"open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","description":"com.example.coin.ui.main.MainFragment.onViewCreated","location":"app/com.example.coin.ui.main/-main-fragment/on-view-created.html","searchKeys":["onViewCreated","open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","com.example.coin.ui.main.MainFragment.onViewCreated"]},{"name":"open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","description":"com.example.coin.ui.main.NewRecordBottomSheetFragment.onViewCreated","location":"app/com.example.coin.ui.main/-new-record-bottom-sheet-fragment/on-view-created.html","searchKeys":["onViewCreated","open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","com.example.coin.ui.main.NewRecordBottomSheetFragment.onViewCreated"]},{"name":"open override fun searchByName(searchRequest: String): Flowable<List<Record>>","description":"com.example.coin.data.RecordRepositoryImpl.searchByName","location":"app/com.example.coin.data/-record-repository-impl/search-by-name.html","searchKeys":["searchByName","open override fun searchByName(searchRequest: String): Flowable<List<Record>>","com.example.coin.data.RecordRepositoryImpl.searchByName"]},{"name":"open override fun updateRecord(record: Record): Completable","description":"com.example.coin.data.RecordRepositoryImpl.updateRecord","location":"app/com.example.coin.data/-record-repository-impl/update-record.html","searchKeys":["updateRecord","open override fun updateRecord(record: Record): Completable","com.example.coin.data.RecordRepositoryImpl.updateRecord"]},{"name":"val amount: Double","description":"com.example.coin.data.Record.amount","location":"app/com.example.coin.data/-record/amount.html","searchKeys":["amount","val amount: Double","com.example.coin.data.Record.amount"]},{"name":"val created: Boolean","description":"com.example.coin.ui.main.NewRecordState.created","location":"app/com.example.coin.ui.main/-new-record-state/created.html","searchKeys":["created","val created: Boolean","com.example.coin.ui.main.NewRecordState.created"]},{"name":"val date: OffsetDateTime","description":"com.example.coin.data.Record.date","location":"app/com.example.coin.data/-record/date.html","searchKeys":["date","val date: OffsetDateTime","com.example.coin.data.Record.date"]},{"name":"val error: Throwable?","description":"com.example.coin.ui.main.MainViewModelState.error","location":"app/com.example.coin.ui.main/-main-view-model-state/error.html","searchKeys":["error","val error: Throwable?","com.example.coin.ui.main.MainViewModelState.error"]},{"name":"val error: Throwable?","description":"com.example.coin.ui.main.NewRecordState.error","location":"app/com.example.coin.ui.main/-new-record-state/error.html","searchKeys":["error","val error: Throwable?","com.example.coin.ui.main.NewRecordState.error"]},{"name":"val isLoading: Boolean","description":"com.example.coin.ui.main.MainViewModelState.isLoading","location":"app/com.example.coin.ui.main/-main-view-model-state/is-loading.html","searchKeys":["isLoading","val isLoading: Boolean","com.example.coin.ui.main.MainViewModelState.isLoading"]},{"name":"val name: String","description":"com.example.coin.data.Record.name","location":"app/com.example.coin.data/-record/name.html","searchKeys":["name","val name: String","com.example.coin.data.Record.name"]},{"name":"val records: List<Record>","description":"com.example.coin.ui.main.MainViewModelState.records","location":"app/com.example.coin.ui.main/-main-view-model-state/records.html","searchKeys":["records","val records: List<Record>","com.example.coin.ui.main.MainViewModelState.records"]},{"name":"val stateFlow: MutableStateFlow<MainViewModelState>","description":"com.example.coin.ui.main.MainViewModel.stateFlow","location":"app/com.example.coin.ui.main/-main-view-model/state-flow.html","searchKeys":["stateFlow","val stateFlow: MutableStateFlow<MainViewModelState>","com.example.coin.ui.main.MainViewModel.stateFlow"]},{"name":"val stateFlow: MutableStateFlow<NewRecordState>","description":"com.example.coin.ui.main.NewRecordViewModel.stateFlow","location":"app/com.example.coin.ui.main/-new-record-view-model/state-flow.html","searchKeys":["stateFlow","val stateFlow: MutableStateFlow<NewRecordState>","com.example.coin.ui.main.NewRecordViewModel.stateFlow"]},{"name":"val uid: Int","description":"com.example.coin.data.Record.uid","location":"app/com.example.coin.data/-record/uid.html","searchKeys":["uid","val uid: Int","com.example.coin.data.Record.uid"]}]
